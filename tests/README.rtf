{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. Install geckodriver for Firefox ot chromedriver for Chrome. This can be done easily with homebrew on MacOS with the following formulas:\
\
brew install geckodriver\
brew install chromedriver\
\
2. When opening the remote driver, soimply specify which browser to open this way:\
\
remDr <- remoteDriver(browserName = "chrome") \
\
\
# Developing and running shiny unit tests\
\
1. Start selenium server from terminal: `
\f1\fs22 \cf2 \cb3 \CocoaLigature0 java -jar selenium-server-standalone.jar` 
\f0\fs24 \cf0 \cb1 \CocoaLigature1 \
\
2. Startup an RStudio window and start Wallace by using the `run_wallace.R` script in the `wallace/test/` directory\
\
3. Start ANOTHER RStudio window and run the first 21 lines of the test-workflow.R code (you might have to `library(testthat)` first, so `context` is actually defined.\
}